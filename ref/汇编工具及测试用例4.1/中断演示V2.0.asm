#############################################################
#中断演示程序，简单走马灯测试，按下1号键用数字1循环移位测试
#中断演示程序，简单走马灯测试，按下2号键用数字2循环移位测试
#最右侧显示数据是循环计数
#这只是中断服务程序演示程序，方便大家检查中断嵌套，
#设计时需要考虑开中断，关中断，设置中断屏蔽字如何用软件指令实现，如何保护现场，中断隐指令需要多少周期
#############################################################

.text
addi $sp, $sp, -4     # push a0
sw $a0, 0($sp)
mfc0 $a0, $14         # get epc
addi $sp, $sp, -4     # push epc
sw $a0, 0($sp)
addi $sp, $sp, -4     # push s3
sw $s3, 0($sp)
addi $sp, $sp, -4     # push s4
sw $s4, 0($sp)
addi $sp, $sp, -4     # push s4
sw $s5, 0($sp)
addi $sp, $sp, -4     # push s4
sw $s6, 0($sp)

addi $s6,$zero,1       #中断号1,2,3   不同中断号显示值不一样

addi $s4,$zero,6      #循环次数初始值  
addi $s5,$zero,1       #计数器累加值
###################################################################
#                逻辑左移，每次移位4位 
# 显示区域依次显示0x00000016 0x00000106 0x00001006 0x00010006 ... 10000006  00000006 依次循环6次
###################################################################
IntLoop:
add $s0,$zero,$s6   

IntLeftShift:       


sll $s0, $s0, 4  
or $s3,$s0,$s4
add    $a0,$0,$s3       #display $s0
addi   $v0,$0,34         # display hex
syscall                 # we are out of here.   

bne $s0, $zero, IntLeftShift
sub $s4,$s4,$s5      #循环次数递减
bne $s4, $zero, IntLoop

addi   $v0,$zero,10         # system call for exit
syscall                  # we are out of here. 

lw $s6, 0($sp)      # pop $s6
addi $sp, $sp, 4
lw $s5, 0($sp)      # pop $s6
addi $sp, $sp, 4
lw $s4, 0($sp)      # pop $s6
addi $sp, $sp, 4
lw $s3, 0($sp)      # pop $s6
addi $sp, $sp, 4
lw $a0, 0($sp)      # pop epc
addi $sp, $sp, 4
mtc0 $a0, $14
lw $a0 0($sp)       # pop $a0
addi $sp, $sp, 4